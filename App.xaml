<Application x:Class="ProjektLAB.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProjektLAB"
                      xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
             StartupUri="MainWindow.xaml"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
         
    xmlns:converters="clr-namespace:ProjektLAB.TrainService.Class.ServiceClass">
    

    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--Top Button's-->
        <Style x:Key="MahApps.Styles.CalendarDayButton" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="FontFamily" Value="{Binding FontFamily, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}"/>
            <Setter Property="FontSize" Value="{Binding FontSize, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="Padding" Value="5 1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <Rectangle x:Name="TodayBackground" Fill="{DynamicResource MahApps.Brushes.Accent}" Opacity="0"/>
                            <Rectangle x:Name="SelectedBackground" Fill="{DynamicResource MahApps.Brushes.Accent4}" Opacity="0"/>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="HighlightBackground" Fill="{DynamicResource MahApps.Brushes.Accent4}" Opacity="0"/>
                            <Path x:Name="Blackout" Data="F0 M 8,1772461,11,029181 L 10,433105,11,029181 11,700684,12,801641 12,973633,11,029181 15,191895,11,029181 12,844727,13,999395 15,21875,17,060919 12,962891,17,060919 11,673828,15,256231 10,352539,17,060919 8,1396484,17,060919 10,519043,14,042364 Z" Fill="{DynamicResource MahApps.Brushes.Accent3}" HorizontalAlignment="Stretch" Margin="3" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch"/>
                            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" Stroke="{DynamicResource MahApps.Brushes.Accent3}" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter TargetName="NormalText" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                <Setter TargetName="NormalText" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsTodayHighlighted, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="True"/>
                                    <Condition Binding="{Binding IsToday, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="DayButtonFocusVisual" Value="{DynamicResource MahApps.Brushes.Gray1}"/>
                                <Setter Property="Visibility" TargetName="DayButtonFocusVisual" Value="Visible"/>
                                <Setter TargetName="NormalText" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsTodayHighlighted, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="True"/>
                                    <Condition Binding="{Binding IsToday, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="NormalText" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}"/>
                                <Setter Property="Opacity" TargetName="TodayBackground" Value="1"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsBlackedOut" Value="True">
                                <Setter Property="Opacity" TargetName="Blackout" Value="1"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsToday" Value="True"/>
                                    <Condition Property="IsBlackedOut" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="Blackout" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                <Setter Property="Opacity" TargetName="TodayBackground" Value="0.5"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <ControlTemplate x:Key="MahApps.Templates.Button.Calendar.Previous" TargetType="{x:Type Button}">
            <Grid Cursor="Hand">
                <Rectangle Fill="{DynamicResource MahApps.Brushes.Accent}" Opacity="0.1" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="MahApps.Templates.Button.Calendar.Next" TargetType="{x:Type Button}">
            <Grid Cursor="Hand">
                <Rectangle Fill="{DynamicResource MahApps.Brushes.Accent}" Opacity="0.1" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="MahApps.Templates.Button.Calendar.Header" TargetType="{x:Type Button}">
            <Grid Cursor="Hand">
                <ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1 4 1 5" Opacity="0.7" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="MahApps.Styles.Button.Calendar.Previous" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.Calendar.Previous}"/>
            <Setter Property="Width" Value="28"/>
        </Style>
        <Style x:Key="MahApps.Styles.Button.Calendar.Next" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.Calendar.Next}"/>
            <Setter Property="Width" Value="28"/>
        </Style>
        <Style x:Key="MahApps.Styles.Button.Calendar.Header" TargetType="{x:Type Button}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.Calendar.Header}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="MahApps.Styles.CalendarItem" TargetType="{x:Type CalendarItem}">
            <Setter Property="Margin" Value="0 3"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate>
                                <TextBlock Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" TextBlock.FontWeight="Bold" HorizontalAlignment="Center" Margin="0 6 0 6" Opacity="0.8" Text="{Binding}" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_Root">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid Background="{DynamicResource MahApps.Brushes.Accent}" HorizontalAlignment="Stretch" Grid.Row="0">
                                        <Button x:Name="PART_HeaderButton" Focusable="False" Grid.Row="0" Style="{DynamicResource MahApps.Styles.Button.Calendar.Header}"/>
                                        <Button x:Name="PART_PreviousButton" Focusable="False" Grid.Row="0" Style="{DynamicResource MahApps.Styles.Button.Calendar.Previous}"/>
                                        <Button x:Name="PART_NextButton" Focusable="False" Grid.Row="0" Style="{DynamicResource MahApps.Styles.Button.Calendar.Next}"/>
                                    </Grid>
                                    <Grid x:Name="PART_MonthView" HorizontalAlignment="Stretch" Margin="6 0 6 6" Grid.Row="1" VerticalAlignment="Stretch" Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView" HorizontalAlignment="Stretch" Margin="6 0 6 6" Grid.Row="1" VerticalAlignment="Stretch" Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="PART_DisabledVisual" Fill="{DynamicResource MahApps.Brushes.Control.Disabled}" Opacity="0" Stroke="{DynamicResource MahApps.Brushes.Control.Disabled}" Stretch="Fill" StrokeThickness="1" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="Year">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}" Value="Decade">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MahApps.Styles.CalendarButton" TargetType="{x:Type CalendarButton}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}"/>
            <Setter Property="FontFamily" Value="{Binding FontFamily, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}"/>
            <Setter Property="FontSize" Value="{Binding FontSize, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Calendar}, Mode=FindAncestor}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="42"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="Padding" Value="1 0 1 1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding Background}" Opacity="0"/>
                            <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0"/>
                            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" Stroke="{DynamicResource MahApps.Brushes.Accent3}" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter TargetName="NormalText" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        
        <Style x:Key="DatePickerCalendarStyle1" BasedOn="{StaticResource MahApps.Styles.Calendar.Base}" TargetType="{x:Type Calendar}">
            <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
            <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}"/>
        </Style>
        <Style TargetType="Button" x:Key="topButton">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E8DDB5"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="50">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C6BB93"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Top Label-->
        <Style TargetType="Label" x:Key="TopLabel">
            <Setter Property="FontSize" Value="42"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#E8DDB5"/>
        </Style>

        <Style TargetType="Label" x:Key="NavigationTopLabel" BasedOn="{StaticResource TopLabel}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        
        <!--Input-->

        <Style x:Key="TextInput" TargetType="TextBlock">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E8DDB5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="5,20,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="150"/>
        </Style>

        <Style x:Key="Input" TargetType="TextBox">
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="Foreground" Value="#121518"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5, 5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                  BorderThickness="1" BorderBrush="#e0e6ed">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PasswordBox" x:Key="InputPassword">
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="Foreground" Value="#121518"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5, 5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
      BorderThickness="1" BorderBrush="#e0e6ed">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Logic Button-->

        <Style x:Key="LogicButton" TargetType="Button">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#111111"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Navigation Button-->

        <Style TargetType="Button" x:Key="NavigationButton" BasedOn="{StaticResource LogicButton}">
            <Setter Property="Width" Value="140"/>
            <Setter Property="Margin" Value="5,10,5,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#E8DDB5" BorderThickness="1" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#111111"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
            
        </Style>

        <Style TargetType="Label" x:Key="LabelButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Icon:PackIconMaterial" x:Key="NavigationImage">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!--DatePicker-->
        
        <Style TargetType="DatePicker">
            <Setter Property="Foreground" Value="#121518"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border Background="#FFFFFF" CornerRadius="5" BorderBrush="#e0e6ed" BorderThickness="1">
                            <Grid>
                                <DatePickerTextBox x:Name="PART_TextBox"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            Padding="10,5"/>
                                <Button x:Name="PART_Button" 
                                Foreground="{TemplateBinding Foreground}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Width="20" Height="20" 
                                HorizontalAlignment="Right" Margin="0,0,10,0"
                                VerticalAlignment="Center">
                                    <Button.Content>
                                        <Path Width="10" Height="10" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 301.856,300.351L 305.205,300.351L 305.205,303.699L 301.856,303.699L 301.856,300.351 Z "/>
                                    </Button.Content>
                                </Button>
                                <Popup x:Name="PART_Popup" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Calendar Foreground="{TemplateBinding Foreground}"
                                      Background="#FFFFFF"/>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


            <Style x:Key="SelectUser" TargetType="ComboBox">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border x:Name="ComboBoxBorder"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="3" 
                        Background="Gray">
                                <Grid>
                                    <ToggleButton Name="ToggleButton"
                                      Grid.Column="2" 
                                      ClickMode="Press" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Background="Gray"/>
                                    <ContentPresenter Name="ContentSite" 
                                          IsHitTestVisible="False" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"/>
                                    <Popup Name="Popup" 
                               Placement="Bottom" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               PopupAnimation="Slide">
                                        <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <Border x:Name="DropDownBorder" 
                                        Background="Gray" 
                                        BorderThickness="1" 
                                        BorderBrush="#E8DDB5"/>
                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ComboBoxBorder" Property="Background" Value="#E8DDB5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="ComboBoxBorder" Property="Background" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GetDateFromUser" TargetType="DatePicker">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="cENTER"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#A49971"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Expander" x:Key="CustomExpanderStyle">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="0,5,0,5"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="16"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Expander">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <StackPanel>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding Header}" Padding="5"/>
                                    <ContentPresenter Content="{TemplateBinding Content}" Visibility="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style TargetType="{x:Type mah:NumericUpDown}" x:Key="CustomNumericUpDownStyle">
                <Setter Property="Background" Value="#E8DDB5"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="BorderBrush" Value="#121518"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="75"/>
                <Setter Property="Height" Value="Auto"/>
            </Style>

            
            <Style TargetType="TextBlock" x:Key="CustomTextBlockStyle">
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="0,5,10,5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="DataGrid" x:Key="CustomDataGridStyle">
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowBackground" Value="#E8E8E8"/>
                <Setter Property="AlternatingRowBackground" Value="#F8F8F8"/>
                <Setter Property="GridLinesVisibility" Value="None"/>
                <Setter Property="HorizontalGridLinesBrush" Value="#E0E0E0"/>
                <Setter Property="VerticalGridLinesBrush" Value="#E0E0E0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="ColumnHeaderHeight" Value="40"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Padding" Value="10,2"/>
                            <Setter Property="Foreground" Value="#121518"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            
                        </Style>
                    </Setter.Value>
                </Setter>
                
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#D3D3D3"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="13,0,13,0"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>


            <Style TargetType="TextBox" x:Key="InputStyle" BasedOn="{StaticResource Input}">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
      BorderThickness="1" BorderBrush="#E8DDB5">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#C6BB93" TargetName="border"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#C6BB93" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBlock" x:Key="UserInformation">
                <Setter Property="Foreground" Value="#E8DDB5"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Ebrima"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="UserAdditionalInformation" BasedOn="{StaticResource UserInformation}">
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style x:Key="pagingButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#E8DDB5"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="1,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10,5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F9EEC6"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="pagingButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="ListBox" x:Key="CustomListBoxStyle">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#121518"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="10,5"/>
                            <Setter Property="Margin" Value="2"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#A49971"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#C6BB93"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                               
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style x:Key="CustomDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#E8DDB5"/>
                <Setter Property="Foreground" Value="#333"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                <Setter Property="BorderBrush" Value="#A49971"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Height" Value="40"/>
            </Style>

            <Style TargetType="DataGrid" x:Key="StylizedDataGrid">
                <!-- Existing setters -->
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="RowBackground" Value="#F0F0F0"/>
                <Setter Property="AlternatingRowBackground" Value="#E8E8E8"/>
                <Setter Property="BorderBrush" Value="#E8DDB5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Ebrima"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
                <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="ColumnHeaderStyle" Value="{StaticResource CustomDataGridColumnHeaderStyle}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style TargetType="ListView" x:Key="ClientListViewStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#121518"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Ebrima"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="#A49971"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Ebrima"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style TargetType="ListViewItem" x:Key="ClientListViewItemStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#A49971"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#C6BB93"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsStartStation}" Value="True">
                        <Setter Property="Foreground" Value="LightGreen"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsEndStation}" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsIntermediateStation}" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style TargetType="Ellipse" x:Key="LegendEllipse">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="Margin" Value="5,2,0,0"/>
            </Style>

            <converters:BooleanToPolishWordConverter x:Key="BooleanToPolishWordConverter"/>

        </ResourceDictionary>

    </Application.Resources>
</Application>
